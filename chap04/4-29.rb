# ５個の整数から構成されるグループの合計を求めるプログラムを作成せよ。
# グループは全部で10個であり、各整数値はキーボードから読み込む。
# ただし、99999を入力すると、全体の入力を終了し、88888を入力すると現在読み込み中のグループの入力を終了すること。

# 実行例
# ■第1グループ
# 整数 : 175
# 整数 : 634
# 整数 : 394
# 整数 : 88888
# ■第2グループ
# 整数 : 555
# 整数 : 777
# 整数 : 88888
# ■第3グループ
# 整数 : 99999

# 合計は2535です。

# 入力されるデータは整数値である前提で実装。
# 全グループの合計totalと繰り返し処理を終了させるための変数switchを定義。
total = 0
switch = 0
# 1から10までのグループそれぞれの合計を足し合わせる繰り返し処理①
(1..10).to_a.each do |i|
    if switch == 1
        # 変数switchの値が1になったときには繰り返しを離脱する。
        break
    else
        # 各グループの合計を出すための繰り返し処理②
        puts "■第#{i}グループ"
        # ここで各グループの合計を初期化。totalを定義したところに書いてしまうと、計算したsumが加算されたままtotalに足されるため答えが合わなくなる。/
        # /（1グループの合計＋(1グループの合計 + 2グループの合計) + (1,2,3グループの合計)・・・という風になってしまう！
        sum = 0
        (1..5).to_a.each do |j|
            print "整数 : "
            num = gets.chomp.to_i
            sum += num
            # 88888が入力された際には、合計から88888を引いて、繰り返し処理②を離脱し、繰り返し処理①へ戻る。
            if num == 88888
                sum -= num
                break
                # 99999が入力された際には、合計から99999を引いて、switchを1にしてから繰り返し処理②を離脱。繰り返し処理①へ。
            elsif num == 99999
                sum -= num
                switch = 1
                break
            end
        end
    end
    total += sum
end
puts "\n合計は#{total}です。"

