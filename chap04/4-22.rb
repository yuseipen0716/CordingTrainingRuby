# 記号文字＊を並べて直角の二等辺三角形を表示するプログラムを作成せよ。直角が左下側、左上側、右下側、右上側の三角形を表示するプログラムをそれぞれ作成せよ。

# 実行例
# 左下直角の二等辺三角形を表示します。
# 段数は: 5
# *
# **
# ***
# ****
# *****

# 左下側が直角

# n段目の時は＊をn個表示 / それを段数だけ繰り返す

puts '左下直角の二等辺三角形を表示します。'
print "段数は: "
level = gets.chomp.to_i

(1..level).to_a.each do |i|
    puts "#{'*' * i}"
end


# 左上側が直角

# 1段目の時は＊をn個表示。n段目のときは1個表示するというように、反比例させて表示する。 / それを段数だけ繰り返す

puts '左上直角の二等辺三角形を表示します。'
print "段数は: "
level = gets.chomp.to_i

# reverseメソッドを使用して、配列の要素を逆順で表示する。
(1..level).to_a.reverse.each do |i|
    puts "#{'*' * i}"
end

# 右上側が直角

# 左上直角の二等辺三角形を表示 + 行の左端に(i-1)個のスペースを置く / それを段数だけ繰り返す
# ここでかなり詰まった。左上直角を表すときに配列をreverseで逆転したせいで、行の左端に(i-1)個のスペースを置く処理をどういった風に書けば良いか混乱した。
# 解説にあるように直角が上に来る場合は＊の個数を(level - i +1)するようにしてあげたらできた。

puts '右上直角の二等辺三角形を表示します。'
print "段数は: "
level = gets.chomp.to_i


(1..level).to_a.each do |i|
    puts "#{' ' * (i - 1) + '*' * (level - i +1) }"
end

# 右下側が直角

# n段目の時は＊をn個表示 + 行の左端に（level - i)個のスペースを置く / それを段数だけ繰り返す

puts '右下直角の二等辺三角形を表示します。'
print "段数は: "
level = gets.chomp.to_i

(1..level).to_a.each do |i|
    puts "#{' ' * (level - i) + '*' * i}"
end